# Based on paper by Rezansoff et al., 2019
# https://www.sciencedirect.com/science/article/pii/S002075191930205X#!
# The confounding effects of high genetic diversity on the determination and interpretation of differential gene expression analysis in the parasitic nematode Haemonchus contortus


# First, to get WGS data and align to ISE genome



# Next, to create an mpileup file of SNPs within CDS of genes



# To determine the SNP rate per CDS
# Want to have the total number of SNPs with AF >40% cf ref genome
# And the total length of the CDS.

# To get the total length of the CDS:
# Use the gff3 file.

gunzip haemonchus_contortus.PRJEB506.WBPS14.annotations.gff3.gz

##gff-version 3
##sequence-region hcontortus_chr4_Celeg_TT_arrow_pilon 1 51826579
# Gene gene:HCON_00095840
hcontortus_chr4_Celeg_TT_arrow_pilon    WormBase_imported       gene    7550    13746   .       -       .       ID=gene:HCON_00095840;Name=HCON_00095840;biotype=protein_coding;previous_stabl
e_id=HCOI00362600
hcontortus_chr4_Celeg_TT_arrow_pilon    WormBase_imported       mRNA    7550    13746   .       -       .       ID=transcript:HCON_00095840;Parent=gene:HCON_00095840;Name=HCON_00095840;info=
method:InterPro accession:IPR002189 description:F-actin-capping protein subunit alpha %0Amethod:InterPro accession:IPR017865 description:F-actin capping protein%2C alpha subunit%2C conserved
 site %0Amethod:InterPro accession:IPR037282 description:F-actin-capping protein subunit alpha/beta
hcontortus_chr4_Celeg_TT_arrow_pilon    WormBase_imported       exon    13455   13746   .       -       .       ID=exon:HCON_00095840.1;Parent=transcript:HCON_00095840
hcontortus_chr4_Celeg_TT_arrow_pilon    WormBase_imported       exon    13259   13384   .       -       .       ID=exon:HCON_00095840.2;Parent=transcript:HCON_00095840
hcontortus_chr4_Celeg_TT_arrow_pilon    WormBase_imported       exon    11972   12133   .       -       .       ID=exon:HCON_00095840.3;Parent=transcript:HCON_00095840
hcontortus_chr4_Celeg_TT_arrow_pilon    WormBase_imported       exon    11792   11910   .       -       .       ID=exon:HCON_00095840.4;Parent=transcript:HCON_00095840
hcontortus_chr4_Celeg_TT_arrow_pilon    WormBase_imported       exon    11614   11701   .       -       .       ID=exon:HCON_00095840.5;Parent=transcript:HCON_00095840
hcontortus_chr4_Celeg_TT_arrow_pilon    WormBase_imported       exon    11474   11545   .       -       .       ID=exon:HCON_00095840.6;Parent=transcript:HCON_00095840
hcontortus_chr4_Celeg_TT_arrow_pilon    WormBase_imported       exon    11353   11418   .       -       .       ID=exon:HCON_00095840.7;Parent=transcript:HCON_00095840
hcontortus_chr4_Celeg_TT_arrow_pilon    WormBase_imported       exon    8221    8319    .       -       .       ID=exon:HCON_00095840.8;Parent=transcript:HCON_00095840
hcontortus_chr4_Celeg_TT_arrow_pilon    WormBase_imported       exon    7550    8072    .       -       .       ID=exon:HCON_00095840.9;Parent=transcript:HCON_00095840
hcontortus_chr4_Celeg_TT_arrow_pilon    WormBase_imported       five_prime_UTR  13545   13746   .       -       .       Parent=transcript:HCON_00095840
hcontortus_chr4_Celeg_TT_arrow_pilon    WormBase_imported       CDS     13455   13544   .       -       0       ID=cds:HCON_00095840;Parent=transcript:HCON_00095840
hcontortus_chr4_Celeg_TT_arrow_pilon    WormBase_imported       CDS     13259   13384   .       -       0       ID=cds:HCON_00095840;Parent=transcript:HCON_00095840
hcontortus_chr4_Celeg_TT_arrow_pilon    WormBase_imported       CDS     11972   12133   .       -       0       ID=cds:HCON_00095840;Parent=transcript:HCON_00095840
hcontortus_chr4_Celeg_TT_arrow_pilon    WormBase_imported       CDS     11792   11910   .       -       0       ID=cds:HCON_00095840;Parent=transcript:HCON_00095840
hcontortus_chr4_Celeg_TT_arrow_pilon    WormBase_imported       CDS     11614   11701   .       -       1       ID=cds:HCON_00095840;Parent=transcript:HCON_00095840
hcontortus_chr4_Celeg_TT_arrow_pilon    WormBase_imported       CDS     11474   11545   .       -       0       ID=cds:HCON_00095840;Parent=transcript:HCON_00095840
hcontortus_chr4_Celeg_TT_arrow_pilon    WormBase_imported       CDS     11353   11418   .       -       0       ID=cds:HCON_00095840;Parent=transcript:HCON_00095840
hcontortus_chr4_Celeg_TT_arrow_pilon    WormBase_imported       CDS     8221    8319    .       -       0       ID=cds:HCON_00095840;Parent=transcript:HCON_00095840
hcontortus_chr4_Celeg_TT_arrow_pilon    WormBase_imported       CDS     8031    8072    .       -       0       ID=cds:HCON_00095840;Parent=transcript:HCON_00095840
hcontortus_chr4_Celeg_TT_arrow_pilon    WormBase_imported       three_prime_UTR 7550    8030    .       -       .       Parent=transcript:HCON_00095840



# First extract the CDS lines only. 
# To get just the first transcript (.1). Note that the .gff3 file has the gene name alone if a single transcript, or with a .1 or .2 etc if more than one transcript.
# Note that will need the same number of '.' as numbers in a gene name, with one extra!!

find . -name "haemonchus_contortus.PRJEB506.WBPS14.annotations.gff3" | xargs grep -E 'CDS' | grep -v 'ID=cds:HCON_.........[2-9]' > CDS.T1.haemonchus_contortus.PRJEB506.WBPS14.annotations.gff3

# Get:
1       AUGUSTUS        CDS     26045   26092   1       +       0       ID=g1.t1.CDS1;Parent=g1.t1
1       AUGUSTUS        CDS     31478   31547   1       +       0       ID=g1.t1.CDS2;Parent=g1.t1
1       AUGUSTUS        CDS     32624   32743   1       +       2       ID=g1.t1.CDS3;Parent=g1.t1
1       AUGUSTUS        CDS     33344   33471   1       +       2       ID=g1.t1.CDS4;Parent=g1.t1
1       AUGUSTUS        CDS     34932   42323   0.81    -       0       ID=g2.t1.CDS1;Parent=g2.t1

# Therefore, to determine length of CDS do:

awk '{print $1 "\t" $3 "\t" $4 "\t" $5 "\t" $9 "\t" ($5 - $4) }' CDS.T1.haemonchus_contortus.PRJEB506.WBPS14.annotations.gff3 > length.CDS.T1.haemonchus_contortus.PRJEB506.WBPS14.annotations.gff3

# Get:
hcontortus_chr4_Celeg_TT_arrow_pilon    CDS     385466  385552  ID=cds:HCON_00096110;Parent=transcript:HCON_00096110    86
hcontortus_chr4_Celeg_TT_arrow_pilon    CDS     385613  385722  ID=cds:HCON_00096110;Parent=transcript:HCON_00096110    109
hcontortus_chr4_Celeg_TT_arrow_pilon    CDS     386728  386806  ID=cds:HCON_00096110;Parent=transcript:HCON_00096110    78
hcontortus_chr4_Celeg_TT_arrow_pilon    CDS     397197  397205  ID=cds:HCON_00096120.1;Parent=transcript:HCON_00096120.1        8
hcontortus_chr4_Celeg_TT_arrow_pilon    CDS     397005  397124  ID=cds:HCON_00096120.1;Parent=transcript:HCON_00096120.1        119
hcontortus_chr4_Celeg_TT_arrow_pilon    CDS     396590  396658  ID=cds:HCON_00096120.1;Parent=transcript:HCON_00096120.1        68
hcontortus_chr4_Celeg_TT_arrow_pilon    CDS     396385  396471  ID=cds:HCON_00096120.1;Parent=transcript:HCON_00096120.1        86
hcontortus_chr4_Celeg_TT_arrow_pilon    CDS     396232  396324  ID=cds:HCON_00096120.1;Parent=transcript:HCON_00096120.1        92
hcontortus_chr4_Celeg_TT_arrow_pilon    CDS     396084  396149  ID=cds:HCON_00096120.1;Parent=transcript:HCON_00096120.1        65
hcontortus_chr4_Celeg_TT_arrow_pilon    CDS     395918  396018  ID=cds:HCON_00096120.1;Parent=transcript:HCON_00096120.1        100
hcontortus_chr4_Celeg_TT_arrow_pilon    CDS     392795  392897  ID=cds:HCON_00096120.1;Parent=transcript:HCON_00096120.1        102
hcontortus_chr4_Celeg_TT_arrow_pilon    CDS     392477  392575  ID=cds:HCON_00096120.1;Parent=transcript:HCON_00096120.1        98
hcontortus_chr4_Celeg_TT_arrow_pilon    CDS     392180  392416  ID=cds:HCON_00096120.1;Parent=transcript:HCON_00096120.1        236
hcontortus_chr4_Celeg_TT_arrow_pilon    CDS     391160  391315  ID=cds:HCON_00096120.1;Parent=transcript:HCON_00096120.1        155
hcontortus_chr4_Celeg_TT_arrow_pilon    CDS     390960  391106  ID=cds:HCON_00096120.1;Parent=transcript:HCON_00096120.1        146
hcontortus_chr4_Celeg_TT_arrow_pilon    CDS     390783  390908  ID=cds:HCON_00096120.1;Parent=transcript:HCON_00096120.1        125
hcontortus_chr4_Celeg_TT_arrow_pilon    CDS     390600  390722  ID=cds:HCON_00096120.1;Parent=transcript:HCON_00096120.1        122
hcontortus_chr4_Celeg_TT_arrow_pilon    CDS     421861  423486  ID=cds:HCON_00096130;Parent=transcript:HCON_00096130    1625
hcontortus_chr4_Celeg_TT_arrow_pilon    CDS     423693  424364  ID=cds:HCON_00096140;Parent=transcript:HCON_00096140    671
hcontortus_chr4_Celeg_TT_arrow_pilon    CDS     424505  425713  ID=cds:HCON_00096150;Parent=transcript:HCON_00096150    1208
hcontortus_chr4_Celeg_TT_arrow_pilon    CDS     426378  427817  ID=cds:HCON_00096160;Parent=transcript:HCON_00096160    1439
hcontortus_chr4_Celeg_TT_arrow_pilon    CDS     428008  428325  ID=cds:HCON_00096170;Parent=transcript:HCON_00096170    317
hcontortus_chr4_Celeg_TT_arrow_pilon    CDS     444393  444518  ID=cds:HCON_00096180.1;Parent=transcript:HCON_00096180.1        125
hcontortus_chr4_Celeg_TT_arrow_pilon    CDS     444641  444772  ID=cds:HCON_00096180.1;Parent=transcript:HCON_00096180.1        131
hcontortus_chr4_Celeg_TT_arrow_pilon    CDS     444830  444928  ID=cds:HCON_00096180.1;Parent=transcript:HCON_00096180.1        98
hcontortus_chr4_Celeg_TT_arrow_pilon    CDS     445007  445105  ID=cds:HCON_00096180.1;Parent=transcript:HCON_00096180.1        98
hcontortus_chr4_Celeg_TT_arrow_pilon    CDS     445426  445566  ID=cds:HCON_00096180.1;Parent=transcript:HCON_00096180.1        140
hcontortus_chr4_Celeg_TT_arrow_pilon    CDS     446120  446234  ID=cds:HCON_00096190;Parent=transcript:HCON_00096190    114
hcontortus_chr4_Celeg_TT_arrow_pilon    CDS     446737  446809  ID=cds:HCON_00096190;Parent=transcript:HCON_00096190    72
hcontortus_chr4_Celeg_TT_arrow_pilon    CDS     446878  446973  ID=cds:HCON_00096190;Parent=transcript:HCON_00096190    95


# To get the gene number/name:
## Need to figure out how to remove all but the gene name..... 
# The first removes all but the gene name for genes with multiple transcripts, the second for genes with just one transcript.

sed 's/ID=cds:HCON_..........;Parent=transcript://g' length.CDS.T1.haemonchus_contortus.PRJEB506.WBPS14.annotations.gff3 > Hcon_gene_name 
sed 's/ID=cds:HCON_........;Parent=transcript://g' Hcon_gene_name > gene.length.CDS.T1.haemonchus_contortus.PRJEB506.WBPS14.annotations.gff3

# So now have the length of each exon in nucleotides. And the gene name for each gene associated with each exon. 

# Now I want to sum the length of each gene.
# Note, the following produces an array using the values in column 5 (the gene name) and summing the values in column 6 (the exon lengths). It also counts the number of exons and the output file contains: Gene name "\t" CDS length "\t" Total number of exons. 


awk -F "\t" '{a[$5] += $6; ++c[$5]} END{for (i in a) print i, a[i], c[i]}' gene.length.CDS.T1.haemonchus_contortus.PRJEB506.WBPS14.annotations.gff3 > SUM.gene.length.CDS.T1.haemonchus_contortus.PRJEB506.WBPS14.annotations.gff3


# The -F is the field separator. 

# Get:

HCON_00085240 473 1
HCON_00117360 371 1
HCON_00054120 694 8
HCON_00078080 3052 26
HCON_00073910 3070 29
HCON_00023000 841 2
HCON_00162390 1696 14
HCON_00131270 906 3
HCON_00129990 825 6
HCON_00097870 687 3

#Note, for some reason genes are not in same order as in the .gff3 file, but checked and seem to be ok with the answers!  

# However, need to get so that can make into a .bed file!! 
# Need to get the first column to be just the chromosome to make into a .bed file

sed 's/hcontortus_chr//g' gene.length.CDS.T1.haemonchus_contortus.PRJEB506.WBPS14.annotations.gff3 > Hcon_chr_1 

sed 's/_Celeg_TT_arrow_pilon//g' Hcon_chr_1 > Hcon_chr_2

# Get:

4       CDS     13455   13544   HCON_00095840   89
4       CDS     13259   13384   HCON_00095840   125
4       CDS     11972   12133   HCON_00095840   161
4       CDS     11792   11910   HCON_00095840   118
4       CDS     11614   11701   HCON_00095840   87
4       CDS     11474   11545   HCON_00095840   71

# To get to right format do:

awk '{print $1 "\t" $3 "\t" $4 "\t" $2 "\t" $5 "\t" $6}' Hcon_chr_2  > gene.length.CDS.T1.haemonchus_contortus.PRJEB506.WBPS14.annotations.bed


# Got sent an mpileup file of the XQTL parents from Dr. S. Doyle (WSI). Note that UGA is first, ISE is second. Note that are sequenced from pools of 200 L3. 
# Note, this has not been filtered for MAPQ. 

# Format: Chr, bp, ref nuc, #reads covering site, Read base relative to reference, Read base quality. 

hcontortus_chr1_Celeg_TT_arrow_pilon    9       c       0       *       *       1       ^!.     /
hcontortus_chr1_Celeg_TT_arrow_pilon    10      t       0       *       *       1       .       <
hcontortus_chr1_Celeg_TT_arrow_pilon    11      a       0       *       *       1       .       B
hcontortus_chr1_Celeg_TT_arrow_pilon    12      a       0       *       *       1       .       B
hcontortus_chr1_Celeg_TT_arrow_pilon    13      g       0       *       *       1       .       B
hcontortus_chr1_Celeg_TT_arrow_pilon    14      c       0       *       *       1       .       F
hcontortus_chr1_Celeg_TT_arrow_pilon    15      c       0       *       *       1       .       F
hcontortus_chr1_Celeg_TT_arrow_pilon    16      t       0       *       *       1       .       B
hcontortus_chr1_Celeg_TT_arrow_pilon    17      a       1       ^!.     B       1       .       B
hcontortus_chr1_Celeg_TT_arrow_pilon    18      a       1       .       B       1       .       F
hcontortus_chr1_Celeg_TT_arrow_pilon    19      g       1       .       B       1       .       F
hcontortus_chr1_Celeg_TT_arrow_pilon    20      c       1       .       B       1       .       F
hcontortus_chr1_Celeg_TT_arrow_pilon    21      c       1       .       B       1       .       F
hcontortus_chr1_Celeg_TT_arrow_pilon    22      t       1       .       F       1       .       F
hcontortus_chr1_Celeg_TT_arrow_pilon    23      a       1       .       F       1       .       F
hcontortus_chr1_Celeg_TT_arrow_pilon    24      a       1       .       F       1       .       F
hcontortus_chr1_Celeg_TT_arrow_pilon    25      g       1       .       F       1       .       F
hcontortus_chr1_Celeg_TT_arrow_pilon    26      c       1       .       F       1       .       F
hcontortus_chr1_Celeg_TT_arrow_pilon    27      c       1       .       F       1       .       F
hcontortus_chr1_Celeg_TT_arrow_pilon    28      t       2       .^*.    FB      1       .       <
hcontortus_chr1_Celeg_TT_arrow_pilon    29      a       2       ..      FB      1       .       F
hcontortus_chr1_Celeg_TT_arrow_pilon    30      a       2       ..      FB      1       .       F
hcontortus_chr1_Celeg_TT_arrow_pilon    31      g       2       ..      FB      1       .       F


# To calculate the mean read depth per site do:

awk 'BEGIN{sum=0; counter=-1}{sum+=$4; counter+=1}END{print sum/counter}' XQTL_PARENTS.mpileup > mean.1.XQTL_PARENTS.mpileup
# 77.3105
# UGA

awk 'BEGIN{sum=0; counter=-1}{sum+=$7; counter+=1}END{print sum/counter}' XQTL_PARENTS.mpileup > mean.2.XQTL_PARENTS.mpileup
# 83.6348
# ISE

# To make into a .bed file to extract the CDS:

awk '{print $1 "\t" $2 "\t" ($2+1) "\t" $3 "\t" $4 "\t" $5 "\t" $6 "\t" $7 "\t" $8 "\t" $9}' XQTL_PARENTS.mpileup > bp2_XQTL_PARENTS.mpileup


# Get:

-bash-3.2$ more bp2_XQTL_PARENTS.mpileup
hcontortus_chr1_Celeg_TT_arrow_pilon    9       10      c       0       *       *       1       ^!.     /
hcontortus_chr1_Celeg_TT_arrow_pilon    10      11      t       0       *       *       1       .       <
hcontortus_chr1_Celeg_TT_arrow_pilon    11      12      a       0       *       *       1       .       B
hcontortus_chr1_Celeg_TT_arrow_pilon    12      13      a       0       *       *       1       .       B
hcontortus_chr1_Celeg_TT_arrow_pilon    13      14      g       0       *       *       1       .       B
hcontortus_chr1_Celeg_TT_arrow_pilon    14      15      c       0       *       *       1       .       F
hcontortus_chr1_Celeg_TT_arrow_pilon    15      16      c       0       *       *       1       .       F
hcontortus_chr1_Celeg_TT_arrow_pilon    16      17      t       0       *       *       1       .       B

# To make into a bed file:

sed 's/hcontortus_chr//g' bp2_XQTL_PARENTS.mpileup > Hcon_chr_1 

sed 's/_Celeg_TT_arrow_pilon//g' Hcon_chr_1 > bp2_XQTL_PARENTS.bed

# To get only those sites that I am interested in: 

bedtools intersect -a bp2_XQTL_PARENTS.bed -b gene.length.CDS.T1.haemonchus_contortus.PRJEB506.WBPS14.annotations.bed -wa -wb -f 2E-9 > CDS_bp2_XQTL_PARENTS.bed

# Get: 

1       5835    5836    T       71      ,$..,,..,.,.....,..,,,,.....,......,..,.,,.....,,,,......,,,.,,,,.,..,^],^],    BBFBFFFFFFFFkFFBFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFF/FFFFFFFFFFFFFF<FBBF<E   113     .$,..,.,.,......,..,,,,,....,........,.,,,,.,......,..,.,.,..,.,,..,,.,,..,,,...,....,.,....,.,,..,.,,,.,.
,,,...,^],      CBFFBFBF/FFFFFFFFFBFFFFFFFFFFFFFFFFFFFFFFFFFFBFFFFFFFFFFFBFFFFFFFFFFFFFFFFFFFFFFFFBFFFB/FFFFFFFFFFFFFFFFFFFBFFBFE       1       5835    59
46      CDS     HCON_00000010   111
1       5836    5837    A       71      .$.,,..,.,.....,..,,,,.....,......,..,.,,.....,,,,......,,,.,,,,.,..,,,^],      7FBBFFBFFFFkFFFFFFFFFFBFFFFFFFFFFF
FFFFFFFFFFFFFF/FFFFBBFFFFBFF/<FFBFFBB   112     ,$..,.,.,......,..,,,,,....,........,.,,,,.,......,..,.,.,..,.,,..,,.,,..,,,...,....,.,....,.,,..,.,,,.,.,
,,...,, BFFBFBFFFFFFFFFFFFFFFFFFFBFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFBFFFFFFFFFFFFFFFFFFFBFFFF<FFFFFFFFFFFFFFFFFFFFFFFF<        1       5835    5946    CD
S       HCON_00000010   111
1       5837    5838    T       71      .,,..,.,.....,..,,,,.....,......,..,.,,.....,,,,......,,,.,,,,.,..,,,,^],       FBBFFBFFFFkFFFFFFFFFF/FFFFBFFFFFF/
FFFFFFFFFFFF</FFFFFFFFFFFFFFFBFFFFFFE   115     .$.,.,.,......,..,,,,,....,........,.,,,,.,......,..,.,.,..,.,,..,,.,,..,,,...,....,.,....,.,,..,.,,,.,.,,
,...,,^f.^].^].^],      EFBFBFFFFFFFFBFFFFFFFFFFFFFFFFFFFFFBFFFFFFF<FFFFBFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFBFFFB<BE     1       58
35      5946    CDS     HCON_00000010   111

# To change this back into an mpileup file for popoolation2:
# Note, am removing the gene file info and ALSO the second bp column!! 

awk '{print $1 "\t" $2 "\t" $4 "\t" $5 "\t" $6 "\t" $7 "\t" $8 "\t" $9 "\t" $10}' CDS_bp2_XQTL_PARENTS.bed > CDS_XQTL_PARENTS.mpileup

# To make the mpileup file in the correct format for PoPoolation2:

sed 's/\t\t/\t!\t!/g' CDS_XQTL_PARENTS.mpileup > CDS_XQTL_PARENTS.mpileup2

# For the following steps use PoPoolation2 (Kofler et al., 2011b). 
# To identify indels of 2 basepairs or greater:

perl  /export/home/jmi45g/popoolation2_1201/indel_filtering/identify-indel-regions.pl \
--indel-window 5 \
--min-count 2 \
--input CDS_XQTL_PARENTS.mpileup2 \
--output CDS_XQTL_PARENTS.mpileup2.indels.gtf

# To sync the filtered mpileup file (discarding low quality bases):

java -ea -Xmx7g -jar /export/home/jmi45g/popoolation2_1201/mpileup2sync.jar \
--input CDS_XQTL_PARENTS.mpileup2 \
--output CDS_XQTL_PARENTS.java.sync \
--fastq-type sanger \
--min-qual 20 \
--threads 8

# To then filter the basepairs around the indels (as these can have false SNPs due to poor alignment of reads in these positions (Schlotterer et al., 2014) - an alternative is to re-align the reads, as GATK does):

perl /export/home/jmi45g/popoolation2_1201/indel_filtering/filter-sync-by-gtf.pl \
--input CDS_XQTL_PARENTS.java.sync \
--gtf CDS_XQTL_PARENTS.mpileup2.indels.gtf \
--output CDS_XQTL_PARENTS.noindels.mpileup.sync


# Allele frequencies, Fst values, Fishers Exact Tests and conversion of output
# files into IGV format.

# To calculate allele counts within populations and allele frequency differences 
# between populations:

perl /export/home/jmi45g/popoolation2_1201/snp-frequency-diff.pl \
--input CDS_XQTL_PARENTS.noindels.mpileup.sync \
--output-prefix CDS_XQTL_PARENTS. \
--min-count 4 \
--min-coverage 10 \
--max-coverage 2%

Result: '--max-coverage 2%' is equivalent to '--max-coverage 185,177'



##chr   pos     rc      allele_count    allele_states   deletion_sum    snp_type        major_alleles(maa)      minor_alleles(mia)      maa_1   maa_2
        mia_1   mia_2
1       5851    A       2       A/G     0       pop     AA      GG      57/65   100/102 8/65    2/102
1       5910    T       2       T/A     0       pop     TT      NA      86/86   86/106  0/86    20/106
1       5916    A       2       A/T     0       pop     AA      TN      76/80   108/108 4/80    0/108
1       5921    C       2       C/T     0       pop     CC      TG      74/83   114/115 9/83    1/115
1       5930    C       2       C/T     0       pop     CC      NT      83/83   104/109 0/83    5/109
1       6016    T       2       T/C     0       pop     TT      CC      77/83   91/96   6/83    5/96
1       6022    A       2       A/G     0       pop     AA      GG      75/82   94/98   7/82    4/98
1       6031    A       2       A/G     0       pop     AA      GG      40/76   56/87   36/76   31/87
1       6040    G       2       G/A     0       pop     GG      AA      68/71   91/92   3/71    1/92
1       6049    T       2       T/A     0       pop     TT      AA      73/75   87/89   2/75    2/89
1       6216    T       2       T/C     0       pop     TT      CC      45/86   55/87   41/86   32/87
1       6218    C       2       C/T     0       pop     CC      TT      76/85   85/87   9/85    2/87
1       6224    G       2       G/A     0       pop     GG      AA      79/88   86/89   9/88    3/89
1       6230    C       2       C/T     0       pop     CC      TT      74/83   83/86   9/83    3/86
1       6245    C       2       C/T     0       pop     CC      AT      79/82   86/90   2/82    4/90
1       6277    C       2       C/T     0       pop     CC      TT      79/88   96/100  9/88    4/100
1       6287    C       2       C/T     0       pop     CC      NT      86/86   96/100  0/86    4/100
1       6288    A       2       A/G     0       pop     AA      GN      84/90   104/104 6/90    0/104
1       6885    T       2       C/T     0       rc|pop  CC      TT      59/70   90/95   11/70   5/95


# To get only biallelic SNPs:

awk '$4 == 2' CDS_XQTL_PARENTS._rc > biallelic_CDS_XQTL_PARENTS._rc

# In R v3.1.2:
# The file won't load as has missing elements per line... 
# So to load adding this to the code: sep="\t", na.strings=""

af<-read.table("biallelic_CDS_XQTL_PARENTS._rc", header=F, sep="\t", na.strings="")
summary(af)


# To make the major and minor allele frequencies numerical and not factors...

# So, first:
af$V10<-as.character(af$V10)
af$V10<-as.numeric( gsub("(\\d+)/(\\d+)", "\\1", af$V10, perl=T) ) / as.numeric ( gsub("(\\d+)/(\\d+)", "\\2", af$V10, perl=T) ) 

af$V11<-as.character(af$V11)
af$V11<-as.numeric( gsub("(\\d+)/(\\d+)", "\\1", af$V11, perl=T) ) / as.numeric ( gsub("(\\d+)/(\\d+)", "\\2", af$V11, perl=T) ) 

af$V12<-as.character(af$V12)
af$V12<-as.numeric( gsub("(\\d+)/(\\d+)", "\\1", af$V12, perl=T) ) / as.numeric ( gsub("(\\d+)/(\\d+)", "\\2", af$V12, perl=T) ) 

af$V13<-as.character(af$V13)
af$V13<-as.numeric( gsub("(\\d+)/(\\d+)", "\\1", af$V13, perl=T) ) / as.numeric ( gsub("(\\d+)/(\\d+)", "\\2", af$V13, perl=T) ) 

summary(af)

# To put headers on the columns....

af$"UGA:MajorAF"<-af$V10
af$"ISE:MajorAF"<-af$V11

af$"UGA:MinorAF"<-af$V12
af$"ISE:MinorAF"<-af$V13

write.table(af,"biallelic_AF_freq.txt",quote = FALSE,row.names = FALSE,sep = "\t")

awk '{print $1 "\t" $2 "\t" $3 "\t" $4 "\t" $5 "\t" $6 "\t" $7 "\t" $8 "\t" $9 "\t" $14 "\t" $15 "\t" $16 "\t" $17}' biallelic_AF_freq.txt > B_biallelic_AF_freq.txt

# Note - the major allele for each pop is the most freq allele NOT the reference allele. To make it easier (possible) to evaluate
# will change to separate files and re-run.

awk '{print $1 "\t" $2 "\t" $3 "\t" $4}' CDS_XQTL_PARENTS.noindels.mpileup.sync > UGA_CDS_XQTL_PARENTS.noindels.mpileup.sync
awk '{print $1 "\t" $2 "\t" $3 "\t" $5}' CDS_XQTL_PARENTS.noindels.mpileup.sync > ISE_CDS_XQTL_PARENTS.noindels.mpileup.sync

perl /export/home/jmi45g/popoolation2_1201/snp-frequency-diff.pl \
--input UGA_CDS_XQTL_PARENTS.noindels.mpileup.sync \
--output-prefix UGA_CDS_XQTL_PARENTS. \
--min-count 2 \
--min-coverage 10 \
--max-coverage 2%

perl /export/home/jmi45g/popoolation2_1201/snp-frequency-diff.pl \
--input ISE_CDS_XQTL_PARENTS.noindels.mpileup.sync \
--output-prefix ISE_CDS_XQTL_PARENTS. \
--min-count 2 \
--min-coverage 10 \
--max-coverage 2%

# To get biallelic sites only: 

awk '$4 == 2' UGA_CDS_XQTL_PARENTS._rc > biallelic_UGA_CDS_XQTL_PARENTS._rc
awk '$4 == 2' ISE_CDS_XQTL_PARENTS._rc > biallelic_ISE_CDS_XQTL_PARENTS._rc

# Then in R v 

af<-read.table("biallelic_UGA_CDS_XQTL_PARENTS._rc", header=F, sep="\t", na.strings="")
summary(af)


# To make the major and minor allele frequencies numerical and not factors...

# So, first:
af$V10<-as.character(af$V10)
af$V10<-as.numeric( gsub("(\\d+)/(\\d+)", "\\1", af$V10, perl=T) ) / as.numeric ( gsub("(\\d+)/(\\d+)", "\\2", af$V10, perl=T) ) 

af$V11<-as.character(af$V11)
af$V11<-as.numeric( gsub("(\\d+)/(\\d+)", "\\1", af$V11, perl=T) ) / as.numeric ( gsub("(\\d+)/(\\d+)", "\\2", af$V11, perl=T) ) 

summary(af)

# To put headers on the columns....

af$"UGA:MajorAF"<-af$V10
af$"UGA:MinorAF"<-af$V11

write.table(af,"UGA_biallelic_AF_freq.txt",quote = FALSE,row.names = FALSE,sep = "\t")

af<-read.table("biallelic_ISE_CDS_XQTL_PARENTS._rc", header=F, sep="\t", na.strings="")
summary(af)


# To make the major and minor allele frequencies numerical and not factors...

# So, first:
af$V10<-as.character(af$V10)
af$V10<-as.numeric( gsub("(\\d+)/(\\d+)", "\\1", af$V10, perl=T) ) / as.numeric ( gsub("(\\d+)/(\\d+)", "\\2", af$V10, perl=T) ) 

af$V11<-as.character(af$V11)
af$V11<-as.numeric( gsub("(\\d+)/(\\d+)", "\\1", af$V11, perl=T) ) / as.numeric ( gsub("(\\d+)/(\\d+)", "\\2", af$V11, perl=T) ) 

summary(af)
af$"ISE:MajorAF"<-af$V10
af$"ISE:MinorAF"<-af$V11

write.table(af,"ISE_biallelic_AF_freq.txt",quote = FALSE,row.names = FALSE,sep = "\t")


## To reduce the file size remove the unwanted columns!

awk '{print $1 "\t" $2 "\t" $3 "\t" $4 "\t" $5 "\t" $6 "\t" $7 "\t" $8 "\t" $9 "\t" $12 "\t" $13}' UGA_biallelic_AF_freq.txt > B_UGA_biallelic_AF_freq.txt


## So, have it such that have pop changes, with the major allele the same as the reference allele and rc|pop changes with the minor allele the same as the reference allele.
## So, to select just hte rc|pop and then to take those with the major allele > 0.4. 

find . -name "B_UGA_biallelic_AF_freq.txt" | xargs grep -E 'rc' > ALT_RC_UGA_biallelic_AF_freq.txt

awk '$10 >0.4' ALT_RC_UGA_biallelic_AF_freq.txt > 0.4_ALT_RC_UGA_biallelic_AF_freq.txt

## Then to get when the minor allele is >0.4. 

find . -name "B_UGA_biallelic_AF_freq.txt" | xargs grep -v 'rc' > SAME_RA_UGA_biallelic_AF_freq.txt

awk '$11 >0.4' SAME_RA_UGA_biallelic_AF_freq.txt > 0.4_SAME_RA_UGA_biallelic_AF_freq.txt

# Great, so now have, for UGA, all the sites with a SNP allele different to the reference sequence with an allele frequency of >0.4.

cat 0.4_SAME_RA_UGA_biallelic_AF_freq.txt 0.4_ALT_RC_UGA_biallelic_AF_freq.txt > all_0.4_UGA_AF

# Looks good - has the rc below the pop

-bash-3.2$ wc -l *UGA*
   229796 0.4_ALT_RC_UGA_biallelic_AF_freq.txt
    89851 0.4_SAME_RA_UGA_biallelic_AF_freq.txt
   319647 all_0.4_UGA_AF

# Need to make the file into a bed file to merge with the genes file. 

awk '{print $1 "\t" ($2-1) "\t" $2 "\t" $3 "\t" $4 "\t" $5 "\t" $6 "\t" $7 "\t" $8 "\t" $9 "\t" $10 "\t" $11}' all_0.4_UGA_AF > all_0.4_UGA_AF.bed

# Great - remember that the SNP is the THIRD column of the file!!! 

# To remove the header line....

find . -name "all_0.4_UGA_AF.bed" | xargs grep -v 'V' > B_all_0.4_UGA_AF.bed
mv B_all_0.4_UGA_AF.bed all_0.4_UGA_AF.bed

# Ok, so now have a file with all the SNPs of UGA cf the reference, with AF >0.4 and a file with all the CDS of all the genes. 
# To intersect these two files. 

bedtools intersect -a all_0.4_UGA_AF.bed -b gene.length.CDS.T1.haemonchus_contortus.PRJEB506.WBPS14.annotations.bed -wa -wb -f 2E-9 > CDS_all_0.4_UGA_AF.bed

# Great. So to now try to count the number of SNPs per gene.... 

awk -F "\t" '{a[$17] += $5; ++c[$17]} END{for (i in a) print i, a[i], c[i]}' CDS_all_0.4_UGA_AF.bed > SNP_NUMBER_CDS_all_0.4_UGA_AF

# Perfect. (the first col = gene name, the next = sum of the SNP count col..... ie. as biallelic this is double the actual number of SNPs, and the third col is the number of SNPs. 

# To make into a better file: 

awk '{print $1 "\t" $3}' SNP_NUMBER_CDS_all_0.4_UGA_AF > SNP_COUNT_CDS_all_0.4_UGA_AF

# To combine the CDS length and the SNP count files:
#Using script from Dr Thomas Otto... 

./list.join2List.nonUnique.pl SNP_COUNT_CDS_all_0.4_UGA_AF SUM.gene.length.CDS.T1.haemonchus_contortus.PRJEB506.WBPS14.annotations.gff3 > UGA_SNP_CDS_0.4

#Note ID that have a gene with the ID= etc still present!
# How many?? 

find . -name "SUM.gene.length.CDS.T1.haemonchus_contortus.PRJEB506.WBPS14.annotations.gff3" | xargs grep -E 'ID' > ID_name

#Only one: 
#HCON_0005265

#How many occurences of this? 

find . -name "SUM.gene.length.CDS.T1.haemonchus_contortus.PRJEB506.WBPS14.annotations.gff3" | xargs grep -E 'HCON_0005265' > ID_name

#ID=cds:HCON_0005265;Parent=transcript:HCON_0005265 1096 11
#HCON_00052650.1 879 9

# Only one! The other has a longer gene name. So... is this just a strange anomaly in gene naming? 
# To count as a separate gene.

sed 's/ID=cds:HCON_0005265;Parent=transcript:HCON_0005265/HCON_0005265/g' SUM.gene.length.CDS.T1.haemonchus_contortus.PRJEB506.WBPS14.annotations.gff3 > B_SUM.gene.length.CDS.T1.haemonchus_contortus.PRJEB506.WBPS14.annotations.gff3 

find . -name "B_SUM.gene.length.CDS.T1.haemonchus_contortus.PRJEB506.WBPS14.annotations.gff3" | xargs grep -E 'HCON_0005265' > ID_name

# Perfect!
# HCON_0005265 1096 11
# HCON_00052650.1 879 9

find . -name "SNP_COUNT_CDS_all_0.4_UGA_AF" | xargs grep -E 'HCON_0005265' > ID_name

# It has the same issue: 
# ID=cds:HCON_0005265;Parent=transcript:HCON_0005265      30
# HCON_00052650.1 1

sed 's/ID=cds:HCON_0005265;Parent=transcript:HCON_0005265/HCON_0005265/g' SNP_COUNT_CDS_all_0.4_UGA_AF > B_SNP_COUNT_CDS_all_0.4_UGA_AF

# Re-named the files without the B! 

# Note, the REF file is delimited by white space. Need it to be tab delimited.... 

awk -v OFS='\t' '{ $1=$1; print }' Sorted.SUM.CDS.REF > Sorted.SUM.CDS.REF_Tab

~to16r/Bin/list.join2List.pl Sorted.SUM.CDS.REF_Tab Sorted_SNP_COUNT_CDS_all_0.4_UGA_AF > UGA_SNP_CDS_0.4

#### YAYA!!!!! 

########################
-bash-3.2$ more UGA_SNP_CDS_0.4
HCON_00000010   580     5       HCON_00000010   3
HCON_00000020   485     4       NA      NA
HCON_00000030   2299    20      HCON_00000030   1
HCON_00000040   2345    1       HCON_00000040   1
HCON_00000050   2345    1       NA      NA
HCON_00000060   730     5       HCON_00000060   1
HCON_00000070   2193    15      HCON_00000070   1
HCON_00000080   704     1       NA      NA
HCON_00000090   443     1       NA      NA
HCON_00000100   326     1       NA      NA
HCON_00000110   256     2       NA      NA
HCON_00000120   452     1       HCON_00000120   1
HCON_00000130   2927    1       HCON_00000130   1
HCON_00000140   1692    6       HCON_00000140   4
HCON_00000150   293     1       HCON_00000150   5
HCON_00000160   370     2       HCON_00000160   7
HCON_00000170   2032    2       HCON_00000170   13
##########################

# So... to calculate the SNP RATE per CDS (SNP count/TOTAL sites)
# Col 1 = Gene name
# Col 2 = Sum of sites
# Col 3 = Sum of exons
# Col 4 = Gene name
# Col 5 = Sum of SNPs

Therefore:

awk '{print $1 "\t" $ 2 "\t" $3 "\t" $5 "\t" ($5/$2)}' UGA_SNP_CDS_0.4 > SNP_RATE_UGA_SNP_CDS_0.4

##########################################################################################
####################### FOR ISE ##########################################################
##########################################################################################

af<-read.table("biallelic_ISE_CDS_XQTL_PARENTS._rc", header=F, sep="\t", na.strings="")
summary(af)


# To make the major and minor allele frequencies numerical and not factors...

# So, first:
af$V10<-as.character(af$V10)
af$V10<-as.numeric( gsub("(\\d+)/(\\d+)", "\\1", af$V10, perl=T) ) / as.numeric ( gsub("(\\d+)/(\\d+)", "\\2", af$V10, perl=T) ) 

af$V11<-as.character(af$V11)
af$V11<-as.numeric( gsub("(\\d+)/(\\d+)", "\\1", af$V11, perl=T) ) / as.numeric ( gsub("(\\d+)/(\\d+)", "\\2", af$V11, perl=T) ) 

summary(af)
af$"ISE:MajorAF"<-af$V10
af$"ISE:MinorAF"<-af$V11

write.table(af,"ISE_biallelic_AF_freq.txt",quote = FALSE,row.names = FALSE,sep = "\t")


## To reduce the file size remove the unwanted columns!

awk '{print $1 "\t" $2 "\t" $3 "\t" $4 "\t" $5 "\t" $6 "\t" $7 "\t" $8 "\t" $9 "\t" $12 "\t" $13}' ISE_biallelic_AF_freq.txt > B_ISE_biallelic_AF_freq.txt


## So, have it such that have pop changes, with the major allele the same as the reference allele and rc|pop changes with the minor allele the same as the reference allele.
## So, to select just hte rc|pop and then to take those with the major allele > 0.4. 

find . -name "B_ISE_biallelic_AF_freq.txt" | xargs grep -E 'rc' > ALT_RC_ISE_biallelic_AF_freq.txt

awk '$10 >0.4' ALT_RC_ISE_biallelic_AF_freq.txt > 0.4_ALT_RC_ISE_biallelic_AF_freq.txt

## Then to get when the minor allele is >0.4. 

find . -name "B_ISE_biallelic_AF_freq.txt" | xargs grep -v 'rc' > SAME_RA_ISE_biallelic_AF_freq.txt

awk '$11 >0.4' SAME_RA_ISE_biallelic_AF_freq.txt > 0.4_SAME_RA_ISE_biallelic_AF_freq.txt

# Great, so now have, for ISE, all the sites with a SNP allele different to the reference sequence with an allele frequency of >0.4.

cat 0.4_SAME_RA_ISE_biallelic_AF_freq.txt 0.4_ALT_RC_ISE_biallelic_AF_freq.txt > all_0.4_ISE_AF

# Looks good - has the rc below the pop

-bash-3.2$ wc -l *UGA*
   229796 0.4_ALT_RC_UGA_biallelic_AF_freq.txt
    89851 0.4_SAME_RA_UGA_biallelic_AF_freq.txt
   319647 all_0.4_UGA_AF

# Need to make the file into a bed file to merge with the genes file. 

awk '{print $1 "\t" ($2-1) "\t" $2 "\t" $3 "\t" $4 "\t" $5 "\t" $6 "\t" $7 "\t" $8 "\t" $9 "\t" $10 "\t" $11}' all_0.4_ISE_AF > all_0.4_ISE_AF.bed

# Great - remember that the SNP is the THIRD column of the file!!! 

# To remove the header line....

find . -name "all_0.4_ISE_AF.bed" | xargs grep -v 'V' > B_all_0.4_ISE_AF.bed
mv B_all_0.4_ISE_AF.bed all_0.4_ISE_AF.bed

# Ok, so now have a file with all the SNPs of UGA cf the reference, with AF >0.4 and a file with all the CDS of all the genes. 
# To intersect these two files. 

bedtools intersect -a all_0.4_ISE_AF.bed -b gene.length.CDS.T1.haemonchus_contortus.PRJEB506.WBPS14.annotations.bed -wa -wb -f 2E-9 > CDS_all_0.4_ISE_AF.bed

# Great. So to now try to count the number of SNPs per gene.... 

awk -F "\t" '{a[$17] += $5; ++c[$17]} END{for (i in a) print i, a[i], c[i]}' CDS_all_0.4_ISE_AF.bed > SNP_NUMBER_CDS_all_0.4_ISE_AF

# Perfect. (the first col = gene name, the next = sum of the SNP count col..... ie. as biallelic this is double the actual number of SNPs, and the third col is the number of SNPs. 

# To make into a better file: 

awk '{print $1 "\t" $3}' SNP_NUMBER_CDS_all_0.4_ISE_AF > SNP_COUNT_CDS_all_0.4_ISE_AF

find . -name "SNP_COUNT_CDS_all_0.4_ISE_AF" | xargs grep -E 'HCON_0005265' > ID_name

# It has the same issue: 
# ID=cds:HCON_0005265;Parent=transcript:HCON_0005265      30
# HCON_00052650.1 1

sed 's/ID=cds:HCON_0005265;Parent=transcript:HCON_0005265/HCON_0005265/g' SNP_COUNT_CDS_all_0.4_ISE_AF > B_SNP_COUNT_CDS_all_0.4_ISE_AF

# Re-named the files without the B! 

sort $1 SNP_COUNT_CDS_all_0.4_ISE_AF > Sorted_SNP_COUNT_CDS_all_0.4_ISE_AF

~to16r/Bin/list.join2List.pl Sorted.SUM.CDS.REF_Tab Sorted_SNP_COUNT_CDS_all_0.4_ISE_AF > ISE_SNP_CDS_0.4

#### YAYA!!!!! 

########################
-bash-3.2$ head ISE_SNP_CDS_0.4
HCON_00000010   580     5       HCON_00000010   1
HCON_00000020   485     4       NA      NA
HCON_00000030   2299    20      NA      NA
HCON_00000040   2345    1       HCON_00000040   4
HCON_00000050   2345    1       HCON_00000050   3
HCON_00000060   730     5       HCON_00000060   1
HCON_00000070   2193    15      HCON_00000070   1
HCON_00000080   704     1       NA      NA
HCON_00000090   443     1       NA      NA
HCON_00000100   326     1       NA      NA
##########################

# So... to calculate the SNP RATE per CDS (SNP count/TOTAL sites)
# Col 1 = Gene name
# Col 2 = Sum of sites
# Col 3 = Sum of exons
# Col 4 = Gene name
# Col 5 = Sum of SNPs

Therefore:

awk '{print $1 "\t" $ 2 "\t" $3 "\t" $5 "\t" ($5/$2)}' ISE_SNP_CDS_0.4 > SNP_RATE_ISE_SNP_CDS_0.4


###### PERFECT!! ######

##### To merge the UGA and ISE SNP_RATE files ######

~to16r/Bin/list.join2List.pl SNP_RATE_ISE_SNP_CDS_0.4 SNP_RATE_UGA_SNP_CDS_0.4 > SNP_RATE_ISE_AND_UGA_SNP_CDS_0.4

# Worked fine:

==> SNP_RATE_ISE_AND_UGA_SNP_CDS_0.4 <==
HCON_00000010   580     5       1       0.00172414      HCON_00000010   580     5       3       0.00517241
HCON_00000020   485     4       NA      0       HCON_00000020   485     4       NA      0
HCON_00000030   2299    20      NA      0       HCON_00000030   2299    20      1       0.000434972
HCON_00000040   2345    1       4       0.00170576      HCON_00000040   2345    1       1       0.000426439
HCON_00000050   2345    1       3       0.00127932      HCON_00000050   2345    1       NA      0
HCON_00000060   730     5       1       0.00136986      HCON_00000060   730     5       1       0.00136986
HCON_00000070   2193    15      1       0.000455996     HCON_00000070   2193    15      1       0.000455996
HCON_00000080   704     1       NA      0       HCON_00000080   704     1       NA      0
HCON_00000090   443     1       NA      0       HCON_00000090   443     1       NA      0
HCON_00000100   326     1       NA      0       HCON_00000100   326     1       NA      0

awk '{print $1 "\t" $ 2 "\t" $3 "\t" $4 "\t" $5 "\t" "\t" $9 "\t" $10}' SNP_RATE_ISE_AND_UGA_SNP_CDS_0.4 > B_SNP_RATE_ISE_AND_UGA_SNP_CDS_0.4
mv B_SNP_RATE_ISE_AND_UGA_SNP_CDS_0.4 SNP_RATE_ISE_AND_UGA_SNP_CDS_0.4

# Col 1 = Gene name
# Col 2 = Sum of sites
# Col 3 = Sum of exons
# Col 4 = ISE SNP count
# Col 5 = ISE CDS SNP rate (SNP count/Sum of sites)
# Col 6 = UGA SNP count
# Col 7 = UGA CDS SNP rate (SNP count/Sum of sites)

# Note, to combine with Roz's DESEQ data need to remove the .1 from gene names!! 

# To remove the .1 need to specify that . is a CHARACTER!!! Otherwise will change lots of things with 1 following them!
# To do this do \.
# Checked that it only collected the HCON_etc.1 and not other columns of figures. Also checked that there were no numbers with 0.1


find . -name "SNP_RATE_ISE_AND_UGA_SNP_CDS_0.4" | xargs grep -E 'HCON_........\.1' > ID_name

sed 's/\.1//g' SNP_RATE_ISE_AND_UGA_SNP_CDS_0.4 > B_SNP_RATE_ISE_AND_UGA_SNP_CDS_0.4

# All good. Will re-name the file: 
mv B_SNP_RATE_ISE_AND_UGA_SNP_CDS_0.4 SNP_RATE_ISE_AND_UGA_SNP_CDS_0.4
 
# Then to merge with Roz DESEQ data:

# First have to remove the header line, also removed the end line (in excel - had an incomplete line of totals):

~to16r/Bin/list.join2List.pl SNP_RATE_ISE_AND_UGA_SNP_CDS_0.4 JAN2020_allmaleanalysis_summary.txt > BETA_JAN2020_allmaleanalysis_summary_tabular_CDS_SNP_RATE.txt


#############################################################################################################################
###############################################  MAPQ filter at 20 ##########################################################
#############################################################################################################################

#Used 
wget <file_link>
# to download bams and bai files.

# Need to make an mpileup file: a file containing information about all bases 
# identified at each genomic site for each population.

# To make a list of all bam files:
# Note that the mpileup file populations will be output in the order of the files
# in the bam.list

find "$PWD" -name \*merged.sorted.marked.realigned.bam > bam.list

# To index the reference genome:
# Installed samtools-1.9 to HPCC
samtools faidx haemonchus_contortus.PRJEB506.WBPS14.genomic.fa
samtools dict haemonchus_contortus.PRJEB506.WBPS14.genomic.fa > haemonchus_contortus.PRJEB506.WBPS14.genomic.dict

# To create an mpileup file:
#!/bin/sh
#PBS -l walltime=50:00:00
#PBS -l cput=50:00:00
#PBS -l nodes=1:centos6


samtools mpileup -B -q 20 -Q 30 --ff DUP \
-f /export/home/jmi45g/Hcont_Snp_diversity/haemonchus_contortus.PRJEB506.WBPS14.genomic.fa \
-b /export/home/jmi45g/Hcont_Snp_diversity/bam.list > \
/export/home/jmi45g/Hcont_Snp_diversity/MAPQ20.UGA_ISE.mpileup

#Saved as a run script, chmod +x,  and did qsub ./run_script.... 

# Explanation of optional requests:
# -B 'Disable probabilistic realignment for the computation of base alignment 
# quality (BAQ). BAQ is the Phred-scaled probability of a read base being 
# misaligned. Applying this option greatly helps to reduce false SNPs caused by 
# misalignments.' (from http://www.htslib.org/doc/samtools-0.1.19.html)
# -q MAPQ - skip reads with MAPQ less than the given value. 
# -Q Base quality - skip bases with base quality smaller than the given value.
# -ff DUP Remove reads marked as duplicates

# The mpileup output file has: 
# 1. The contig
# 2. The position
# 3. The basepair
# 4. The coverage (first sample)
# 5. The basepair relative to the reference genome ('.' is the same, ',' is the same as the reverse strand)
# 6. The sequencing quality
# 7. Numbers 4-6 repeated for the second sample etc.

# Note, I then needed to correct the mpileup file for the next step:

sed 's/\t\t/\t!\t!/g' MAPQ20.UGA_ISE.mpileup > MAPQ20.UGA_ISE.mpileup2



#!/bin/sh
#PBS -l walltime=50:00:00
#PBS -l cput=50:00:00
#PBS -l nodes=1:centos6

awk 'BEGIN{sum=0; counter=-1}{sum+=$4; counter+=1}END{print sum/counter}' /export/home/jmi45g/Hcont_Snp_diversity/MAPQ20.UGA_ISE.mpileup2 > /export/home/jmi45g/Hcont_Snp_diversity/mean.UGA.MAPQ20.UGA_ISE.mpileup2
awk 'BEGIN{sum=0; counter=-1}{sum+=$7; counter+=1}END{print sum/counter}' /export/home/jmi45g/Hcont_Snp_diversity/MAPQ20.UGA_ISE.mpileup2 > /export/home/jmi45g/Hcont_Snp_diversity/mean.ISE.MAPQ20.UGA_ISE.mpileup2

# UGA: 72.0517
# ISE: 65.9491

## ISE has reduced by more than UGA! 


# To make into a .bed file to extract the CDS:


#!/bin/sh
#PBS -l walltime=50:00:00
#PBS -l cput=50:00:00
#PBS -l nodes=1:centos6
awk '{print $1 "\t" $2 "\t" ($2+1) "\t" $3 "\t" $4 "\t" $5 "\t" $6 "\t" $7 "\t" $8 "\t" $9}' /export/home/jmi45g/Hcont_Snp_diversity/MAPQ20.UGA_ISE.mpileup2 > /export/home/jmi45g/Hcont_Snp_diversity/bp2_MAPQ20.UGA_ISE.mpileup2

# To make into a bed file:

#!/bin/sh
#PBS -l walltime=50:00:00
#PBS -l cput=50:00:00
#PBS -l nodes=1:centos6
sed 's/hcontortus_chr//g' /export/home/jmi45g/Hcont_Snp_diversity/bp2_MAPQ20.UGA_ISE.mpileup2 > /export/home/jmi45g/Hcont_Snp_diversity/Hcon_chr_1 

sed 's/_Celeg_TT_arrow_pilon//g' /export/home/jmi45g/Hcont_Snp_diversity/Hcon_chr_1 > /export/home/jmi45g/Hcont_Snp_diversity/bp2_MAPQ20.UGA_ISE.mpileup2.bed

# To get only those sites that I am interested in: 


#!/bin/sh
#PBS -l walltime=50:00:00
#PBS -l cput=50:00:00
#PBS -l nodes=1:centos6
bedtools intersect -a /export/home/jmi45g/Hcont_Snp_diversity/bp2_MAPQ20.UGA_ISE.mpileup2.bed -b /export/home/jmi45g/Hcont_Snp_diversity/gene.length.CDS.T1.haemonchus_contortus.PRJEB506.WBPS14.annotations.bed -wa -wb -f 2E-9 > /export/home/jmi45g/Hcont_Snp_diversity/CDS_bp2_MAPQ20.UGA_ISE.mpileup2.bed

# To change this back into an mpileup file for popoolation2:
# Note, am removing the gene file info and ALSO the second bp column!! 

#!/bin/sh
#PBS -l walltime=30:00:00
#PBS -l cput=50:00:00
#PBS -l nodes=1:centos6
awk '{print $1 "\t" $2 "\t" $4 "\t" $5 "\t" $6 "\t" $7 "\t" $8 "\t" $9 "\t" $10}' /export/home/jmi45g/Hcont_Snp_diversity/CDS_bp2_MAPQ20.UGA_ISE.mpileup2.bed > /export/home/jmi45g/Hcont_Snp_diversity/CDS_bp2_MAPQ20.UGA_ISE.mpileup


# For the following steps use PoPoolation2 (Kofler et al., 2011b). 
# To identify indels of 2 basepairs or greater:

#!/bin/sh
#PBS -l walltime=30:00:00
#PBS -l cput=50:00:00
#PBS -l nodes=1:centos6
perl  /export/home/jmi45g/popoolation2_1201/indel_filtering/identify-indel-regions.pl \
--indel-window 5 \
--min-count 2 \
--input /export/home/jmi45g/Hcont_Snp_diversity/CDS_bp2_MAPQ20.UGA_ISE.mpileup \
--output /export/home/jmi45g/Hcont_Snp_diversity/CDS_bp2_MAPQ20.UGA_ISE.mpileup.indels.gtf

# To sync the filtered mpileup file (discarding low quality bases):

#!/bin/sh
#PBS -l walltime=30:00:00
#PBS -l cput=50:00:00
#PBS -l nodes=1:centos6
java -ea -Xmx7g -jar /export/home/jmi45g/popoolation2_1201/mpileup2sync.jar \
--input /export/home/jmi45g/Hcont_Snp_diversity/CDS_bp2_MAPQ20.UGA_ISE.mpileup \
--output /export/home/jmi45g/Hcont_Snp_diversity/CDS_bp2_MAPQ20.UGA_ISE.java.sync \
--fastq-type sanger \
--min-qual 20 \
--threads 8

# To then filter the basepairs around the indels (as these can have false SNPs due to poor alignment of reads in these positions (Schlotterer et al., 2014) - an alternative is to re-align the reads, as GATK does):

#!/bin/sh
#PBS -l walltime=30:00:00
#PBS -l cput=50:00:00
#PBS -l nodes=1:centos6
perl /export/home/jmi45g/popoolation2_1201/indel_filtering/filter-sync-by-gtf.pl \
--input /export/home/jmi45g/Hcont_Snp_diversity/CDS_bp2_MAPQ20.UGA_ISE.java.sync \
--gtf /export/home/jmi45g/Hcont_Snp_diversity/CDS_bp2_MAPQ20.UGA_ISE.mpileup.indels.gtf \
--output /export/home/jmi45g/Hcont_Snp_diversity/CDS_bp2_MAPQ20.UGA_ISE.noindels.java.sync

#!/bin/sh
#PBS -l walltime=30:00:00
#PBS -l cput=50:00:00
#PBS -l nodes=1:centos6
awk '{print $1 "\t" $2 "\t" $3 "\t" $4}' /export/home/jmi45g/Hcont_Snp_diversity/CDS_bp2_MAPQ20.UGA_ISE.noindels.java.sync > /export/home/jmi45g/Hcont_Snp_diversity/UGA_CDS_bp2_MAPQ20.UGA_ISE.noindels.java.sync

#!/bin/sh
#PBS -l walltime=30:00:00
#PBS -l cput=50:00:00
#PBS -l nodes=1:centos6
awk '{print $1 "\t" $2 "\t" $3 "\t" $5}' /export/home/jmi45g/Hcont_Snp_diversity/CDS_bp2_MAPQ20.UGA_ISE.noindels.java.sync > /export/home/jmi45g/Hcont_Snp_diversity/ISE_CDS_bp2_MAPQ20.UGA_ISE.noindels.java.sync

perl /export/home/jmi45g/popoolation2_1201/snp-frequency-diff.pl \
--input UGA_CDS_XQTL_PARENTS.noindels.mpileup.sync \
--output-prefix UGA_CDS_XQTL_PARENTS. \
--min-count 2 \
--min-coverage 10 \
--max-coverage 2%

perl /export/home/jmi45g/popoolation2_1201/snp-frequency-diff.pl \
--input ISE_CDS_XQTL_PARENTS.noindels.mpileup.sync \
--output-prefix ISE_CDS_XQTL_PARENTS. \
--min-count 2 \
--min-coverage 10 \
--max-coverage 2%


# Allele frequencies, Fst values, Fishers Exact Tests and conversion of output
# files into IGV format.

# To calculate allele counts within populations and allele frequency differences 
# between populations:

perl /export/home/jmi45g/popoolation2_1201/snp-frequency-diff.pl \
--input CDS_XQTL_PARENTS.noindels.mpileup.sync \
--output-prefix CDS_XQTL_PARENTS. \
--min-count 4 \
--min-coverage 10 \
--max-coverage 2%


#############################################################
# 3. To calculate the coverage by read count within given window sizes to assess how MAPQ changes over the genome
# using bedtools suite (Quinlan, 2014; Quinlan and Hall, 2010)

# Firstly, need to make windows using the genome. 
# For this example, the window size is related to the mean gene length.

# To use as input the indexed fasta file, which has the chr/end basepair.
# Need to first make this into a bed file 

awk '{print $1 "\t" 1 "\t" $2}' haemonchus_contortus.PRJEB506.WBPS14.genomic.fa.fai \
> \
haemonchus_contortus.PRJEB506.WBPS14.genomic.bed

# Note - it still has the mitochondrial genome!

hcontortus_chr4_Celeg_TT_arrow_pilon    1       51826579
hcontortus_chr5_Celeg_TT_arrow_pilon    1       48868368
hcontortus_chr2_Celeg_TT_arrow_pilon    1       47382676
hcontortus_chrX_Celeg_TT_arrow_pilon    1       46012677
hcontortus_chr1_Celeg_TT_arrow_pilon    1       45774638
hcontortus_chr3_Celeg_TT_arrow_pilon    1       43560352
hcontortus_chr_mtDNA_arrow_pilon        1       14018

# In nano removed the mtDNA

# Note, on the HPCC have bedtools v2.15.0
# It wants something slightly different...
# Chrom_name Lenght_of_chrm

awk '{print $1 "\t" $3}' haemonchus_contortus.PRJEB506.WBPS14.genomic.bed > haemonchus_contortus.PRJEB506.WBPS14.genomic.chromosomes

# Make the windows:
bedtools makewindows -g haemonchus_contortus.PRJEB506.WBPS14.genomic.chromosomes \
-w 10000 > \
haemonchus_contortus.PRJEB506.WBPS14.genomic.gene_windows.bed

# perfect

# Next calculate the number of reads per window for each sample:
# Supply all .bam files required
# This example also filters the reads by MAPQ>=20 (-q)


#!/bin/sh
#PBS -l walltime=50:00:00
#PBS -l cput=50:00:00
#PBS -l nodes=1:centos6

bedtools multicov -q 20 -bams \
/export/home/jmi45g/Hcont_Snp_diversity/MHCO18_P0_L3_n200_IVM_01_26582_8_2.merged.sorted.marked.realigned.bam \
/export/home/jmi45g/Hcont_Snp_diversity/MHCO3_P0_L3_n200_01_26582_8_1.merged.sorted.marked.realigned.bam \
-bed /export/home/jmi45g/Hcont_Snp_diversity/haemonchus_contortus.PRJEB506.WBPS14.genomic.gene_windows.bed \
> \
/export/home/jmi45g/Hcont_Snp_diversity/bedtools_read_count_10kb_MAPQ20.bed


###NOTE NOTE NOTE
# Firstly it could not access the bam files (possibly a different header error), however when put both on the same line it worked ok. 
# Secondly it outputs a file with all read counts as 0. I'm not sure why it is doing this. 
# I found out that it was doing this because I had made all chromosomes to be just 1, 2 etc. You have to retain the full name of the chromosome scaffold!
# I am using v2.15.0.

# Have running...
# a MAPQ20 (UGA then ISE)
# a MAPQ all (UGA then ISE)
# a MAPQ all UGA only


# Took the MAPQ20 and MAPQall and transferred to own laptop.
# Opened R studio
# Loaded file, and created new column 'mid' which was the mid point of each 10kb window. 

all<-read.table("bedtools_read_count_10kb_MAPQall.bed")
all$mid<-(all$V2+5000)

> summary(all)
                                    V1      
 hcontortus_chr_mtDNA_arrow_pilon    :   2  
 hcontortus_chr1_Celeg_TT_arrow_pilon:4578  
 hcontortus_chr2_Celeg_TT_arrow_pilon:4739  
 hcontortus_chr3_Celeg_TT_arrow_pilon:4357  
 hcontortus_chr4_Celeg_TT_arrow_pilon:5183  
 hcontortus_chr5_Celeg_TT_arrow_pilon:4887  
 hcontortus_chrX_Celeg_TT_arrow_pilon:4602  
       V2                 V3          
 Min.   :       0   Min.   :   10000  
 1st Qu.:11800000   1st Qu.:11810000  
 Median :23615000   Median :23625000  
 Mean   :23687028   Mean   :23697026  
 3rd Qu.:35430000   3rd Qu.:35440000  
 Max.   :51820000   Max.   :51826579  
                                      
       V4               V5        
 Min.   :     0   Min.   :     0  
 1st Qu.:  5926   1st Qu.:  6243  
 Median :  6904   Median :  7253  
 Mean   :  7711   Mean   :  7969  
 3rd Qu.:  7926   3rd Qu.:  8191  
 Max.   :705518   Max.   :670923  
                                  
      mid          
 Min.   :    5000  
 1st Qu.:11805000  
 Median :23620000  
 Mean   :23692028  
 3rd Qu.:35435000  
 Max.   :51825000  

chr1<-subset(all, all$V1=="hcontortus_chr1_Celeg_TT_arrow_pilon")

x<-ggplot(all)+
geom_point(aes(x=all$mid, y=all$V4))+
facet_grid(rows=vars(V1))
x

# For the MAPQ20 filtered data:

mapq20<-read.table("bedtools_read_count_10kb_MAPQ20.bed")
mapq20$mid<-(mapq20$V2+5000)
> summary(mapq20)
                                    V1      
 hcontortus_chr_mtDNA_arrow_pilon    :   2  
 hcontortus_chr1_Celeg_TT_arrow_pilon:4578  
 hcontortus_chr2_Celeg_TT_arrow_pilon:4739  
 hcontortus_chr3_Celeg_TT_arrow_pilon:4357  
 hcontortus_chr4_Celeg_TT_arrow_pilon:5183  
 hcontortus_chr5_Celeg_TT_arrow_pilon:4887  
 hcontortus_chrX_Celeg_TT_arrow_pilon:4602  
       V2                 V3          
 Min.   :       0   Min.   :   10000  
 1st Qu.:11800000   1st Qu.:11810000  
 Median :23615000   Median :23625000  
 Mean   :23687028   Mean   :23697026  
 3rd Qu.:35430000   3rd Qu.:35440000  
 Max.   :51820000   Max.   :51826579  
                                      
       V4               V5        
 Min.   :     0   Min.   :     0  
 1st Qu.:  5266   1st Qu.:  5697  
 Median :  6270   Median :  6671  
 Mean   :  6330   Mean   :  6709  
 3rd Qu.:  7292   3rd Qu.:  7705  
 Max.   :159877   Max.   :196406  
                                  
      mid          
 Min.   :    5000  
 1st Qu.:11805000  
 Median :23620000  
 Mean   :23692028  
 3rd Qu.:35435000  
 Max.   :51825000 
 
 ## Note that, despite the lower awk mean for ISE, the mean read count is greater for ISE than for UGA. 

x<-ggplot(mapq20)+
geom_point(aes(x=mapq20$mid, y=mapq20$V4))+
facet_grid(rows=vars(V1))
x

# Well, definitely have fewer reads aligning over the genome in certain areas, which brings the total y-axis scale down. 

# Will try a zoomed in scale to try to compare region better. 

# Most are less than 10k

# For UGA:

x<-ggplot(all)+
geom_point(aes(x=all$mid, y=all$V4))+
coord_cartesian(ylim=c(0,15000))+
facet_grid(rows=vars(V1))
x

x<-ggplot(mapq20)+
geom_point(aes(x=mapq20$mid, y=mapq20$V4))+
coord_cartesian(ylim=c(0,15000))+
facet_grid(rows=vars(V1))
x


# For ISE:


x<-ggplot(all)+
geom_point(aes(x=all$mid, y=all$V5))+
coord_cartesian(ylim=c(0,15000))+
facet_grid(rows=vars(V1))
x

x<-ggplot(mapq20)+
geom_point(aes(x=mapq20$mid, y=mapq20$V5))+
coord_cartesian(ylim=c(0,15000))+
facet_grid(rows=vars(V1))
x

chr5<-subset(all, all$V1 == "hcontortus_chr5_Celeg_TT_arrow_pilon")
summary(chr5)
                                    V1      
 hcontortus_chr_mtDNA_arrow_pilon    :   0  
 hcontortus_chr1_Celeg_TT_arrow_pilon:   0  
 hcontortus_chr2_Celeg_TT_arrow_pilon:   0  
 hcontortus_chr3_Celeg_TT_arrow_pilon:   0  
 hcontortus_chr4_Celeg_TT_arrow_pilon:   0  
 hcontortus_chr5_Celeg_TT_arrow_pilon:4887  
 hcontortus_chrX_Celeg_TT_arrow_pilon:   0  
       V2                 V3          
 Min.   :       0   Min.   :   10000  
 1st Qu.:12215000   1st Qu.:12225000  
 Median :24430000   Median :24440000  
 Mean   :24430000   Mean   :24440000  
 3rd Qu.:36645000   3rd Qu.:36655000  
 Max.   :48860000   Max.   :48868368  
                                      
       V4               V5        
 Min.   :     0   Min.   :     0  
 1st Qu.:  5515   1st Qu.:  6001  
 Median :  6860   Median :  7309  
 Mean   :  7337   Mean   :  7661  
 3rd Qu.:  7917   3rd Qu.:  8266  
 Max.   :328158   Max.   :330763  
                                  
      mid          
 Min.   :    5000  
 1st Qu.:12220000  
 Median :24435000  
 Mean   :24435000  
 3rd Qu.:36650000  
 Max.   :48865000  
                   
chr5mapq20<-subset(mapq20, mapq20$V1=="hcontortus_chr5_Celeg_TT_arrow_pilon")
summary(chr5mapq20)
                                    V1      
 hcontortus_chr_mtDNA_arrow_pilon    :   0  
 hcontortus_chr1_Celeg_TT_arrow_pilon:   0  
 hcontortus_chr2_Celeg_TT_arrow_pilon:   0  
 hcontortus_chr3_Celeg_TT_arrow_pilon:   0  
 hcontortus_chr4_Celeg_TT_arrow_pilon:   0  
 hcontortus_chr5_Celeg_TT_arrow_pilon:4887  
 hcontortus_chrX_Celeg_TT_arrow_pilon:   0  
       V2                 V3          
 Min.   :       0   Min.   :   10000  
 1st Qu.:12215000   1st Qu.:12225000  
 Median :24430000   Median :24440000  
 Mean   :24430000   Mean   :24440000  
 3rd Qu.:36645000   3rd Qu.:36655000  
 Max.   :48860000   Max.   :48868368  
                                      
       V4              V5             mid          
 Min.   :    0   Min.   :    0   Min.   :    5000  
 1st Qu.: 4734   1st Qu.: 5306   1st Qu.:12220000  
 Median : 6161   Median : 6698   Median :24435000  
 Mean   : 5970   Mean   : 6450   Mean   :24435000  
 3rd Qu.: 7280   3rd Qu.: 7752   3rd Qu.:36650000  
 Max.   :67188   Max.   :75389   Max.   :48865000 
 
 ### To plot ChrV only
 
 
 # For UGA:

x<-ggplot(chr5)+
labs(y="Read count per 10kb window", x="Basepair") +
geom_rect(aes(xmin=37000000, ymin=0, xmax=38000000, ymax= 15000), fill="light blue", alpha="0.3")+
geom_rect(aes(xmin=45000000, ymin=0, xmax=48000000, ymax= 15000), fill="light blue", alpha="0.3")+
geom_point(aes(x=chr5$mid, y=chr5$V4))+
coord_cartesian(ylim=c(0,15000))
x

x<-ggplot(chr5mapq20)+
labs(y="Read count per 10kb window", x="Basepair") +
geom_rect(aes(xmin=37000000, ymin=0, xmax=38000000, ymax= 15000), fill="light blue", alpha="0.3")+
geom_rect(aes(xmin=45000000, ymin=0, xmax=48000000, ymax= 15000), fill="light blue", alpha="0.3")+
geom_point(aes(x=chr5mapq20$mid, y=chr5mapq20$V4))+
coord_cartesian(ylim=c(0,15000))
x


# For ISE:


x<-ggplot(chr5)+
labs(y="Read count per 10kb window", x="Basepair") +
geom_rect(aes(xmin=37000000, ymin=0, xmax=38000000, ymax= 15000), fill="light blue", alpha="0.3")+
geom_rect(aes(xmin=45000000, ymin=0, xmax=48000000, ymax= 15000), fill="light blue", alpha="0.3")+
geom_point(aes(x=chr5$mid, y=chr5$V5))+
coord_cartesian(ylim=c(0,15000))
x

x<-ggplot(chr5mapq20)+
labs(y="Read count per 10kb window", x="Basepair") +
geom_rect(aes(xmin=37000000, ymin=0, xmax=38000000, ymax= 15000), fill="light blue", alpha="0.3")+
geom_rect(aes(xmin=45000000, ymin=0, xmax=48000000, ymax= 15000), fill="light blue", alpha="0.3")+
geom_point(aes(x=chr5mapq20$mid, y=chr5mapq20$V5))+
coord_cartesian(ylim=c(0,15000))
x


# For both:
x<-ggplot(chr5)+
labs(y="Read count per 10kb window", x="Basepair") +
geom_rect(aes(xmin=37000000, ymin=0, xmax=38000000, ymax= 15000), fill="light blue", alpha="0.3")+
geom_rect(aes(xmin=45000000, ymin=0, xmax=48000000, ymax= 15000), fill="light blue", alpha="0.3")+
geom_smooth(aes(x=chr5$mid, y=chr5$V4), colour="green")+
geom_smooth(aes(x=chr5mapq20$mid, y=chr5mapq20$V4), colour="blue")+
geom_smooth(aes(x=chr5$mid, y=chr5$V5), colour="pink")+
geom_smooth(aes(x=chr5mapq20$mid, y=chr5mapq20$V5), colour="purple")+
coord_cartesian(ylim=c(0,15000))
x




### ChrI

chr1<-subset(all, all$V1 == "hcontortus_chr1_Celeg_TT_arrow_pilon")
summary(chr1)

                                    V1      
 hcontortus_chr_mtDNA_arrow_pilon    :   0  
 hcontortus_chr1_Celeg_TT_arrow_pilon:4578  
 hcontortus_chr2_Celeg_TT_arrow_pilon:   0  
 hcontortus_chr3_Celeg_TT_arrow_pilon:   0  
 hcontortus_chr4_Celeg_TT_arrow_pilon:   0  
 hcontortus_chr5_Celeg_TT_arrow_pilon:   0  
 hcontortus_chrX_Celeg_TT_arrow_pilon:   0  
       V2                 V3          
 Min.   :       0   Min.   :   10000  
 1st Qu.:11442500   1st Qu.:11452500  
 Median :22885000   Median :22895000  
 Mean   :22885000   Mean   :22894999  
 3rd Qu.:34327500   3rd Qu.:34337500  
 Max.   :45770000   Max.   :45774638  
                                      
       V4               V5        
 Min.   :     0   Min.   :     0  
 1st Qu.:  5866   1st Qu.:  6193  
 Median :  6891   Median :  7275  
 Mean   :  7353   Mean   :  7626  
 3rd Qu.:  7860   3rd Qu.:  8156  
 Max.   :215190   Max.   :224981  
                                  
      mid          
 Min.   :    5000  
 1st Qu.:11447500  
 Median :22890000  
 Mean   :22890000  
 3rd Qu.:34332500  
 Max.   :45775000 
chr1mapq20<-subset(mapq20, mapq20$V1=="hcontortus_chr1_Celeg_TT_arrow_pilon")
summary(chr1mapq20)

                                    V1      
 hcontortus_chr_mtDNA_arrow_pilon    :   0  
 hcontortus_chr1_Celeg_TT_arrow_pilon:4578  
 hcontortus_chr2_Celeg_TT_arrow_pilon:   0  
 hcontortus_chr3_Celeg_TT_arrow_pilon:   0  
 hcontortus_chr4_Celeg_TT_arrow_pilon:   0  
 hcontortus_chr5_Celeg_TT_arrow_pilon:   0  
 hcontortus_chrX_Celeg_TT_arrow_pilon:   0  
       V2                 V3          
 Min.   :       0   Min.   :   10000  
 1st Qu.:11442500   1st Qu.:11452500  
 Median :22885000   Median :22895000  
 Mean   :22885000   Mean   :22894999  
 3rd Qu.:34327500   3rd Qu.:34337500  
 Max.   :45770000   Max.   :45774638  
                                      
       V4               V5        
 Min.   :     0   Min.   :     0  
 1st Qu.:  5198   1st Qu.:  5588  
 Median :  6296   Median :  6746  
 Mean   :  6193   Mean   :  6585  
 3rd Qu.:  7288   3rd Qu.:  7703  
 Max.   :102809   Max.   :126238  
                                  
      mid          
 Min.   :    5000  
 1st Qu.:11447500  
 Median :22890000  
 Mean   :22890000  
 3rd Qu.:34332500  
 Max.   :45775000 
 
  # For UGA:

x<-ggplot(chr1)+
geom_point(aes(x=chr1$mid, y=chr1$V4))+
coord_cartesian(ylim=c(0,15000))
x

x<-ggplot(chr1mapq20)+
geom_point(aes(x=chr1mapq20$mid, y=chr1mapq20$V4))+
coord_cartesian(ylim=c(0,15000))
x


# For ISE:


x<-ggplot(chr1)+
geom_point(aes(x=chr1$mid, y=chr1$V5))+
coord_cartesian(ylim=c(0,15000))
x

x<-ggplot(chr1mapq20)+
geom_point(aes(x=chr1mapq20$mid, y=chr1mapq20$V5))+
coord_cartesian(ylim=c(0,15000))
x
 
# For both:
x<-ggplot(chr1)+
labs(y="Read count per 10kb window", x="Basepair") +
geom_smooth(aes(x=chr1$mid, y=chr1$V4), colour="green")+
geom_smooth(aes(x=chr1mapq20$mid, y=chr1mapq20$V4), colour="blue")+
geom_smooth(aes(x=chr1$mid, y=chr1$V5), colour="pink")+
geom_smooth(aes(x=chr1mapq20$mid, y=chr1mapq20$V5), colour="purple")+
coord_cartesian(ylim=c(0,15000))
x
 
 
 
 
 # For UGA:

x<-ggplot(all)+
geom_point(aes(x=all$mid, y=all$V4, col=all$V1))+
coord_cartesian(ylim=c(0,15000))+
facet_grid(rows=vars(V1))+
theme(legend.position="bottom")
x

x<-ggplot(mapq20)+
geom_point(aes(x=mapq20$mid, y=mapq20$V4))+
coord_cartesian(ylim=c(0,15000))+
facet_grid(rows=vars(V1))
x


# For ISE:


x<-ggplot(all)+
geom_point(aes(x=all$mid, y=all$V5))+
coord_cartesian(ylim=c(0,15000))+
facet_grid(rows=vars(V1))
x

x<-ggplot(mapq20)+
geom_point(aes(x=mapq20$mid, y=mapq20$V5))+
coord_cartesian(ylim=c(0,15000))+
facet_grid(rows=vars(V1))
x


### ChrII

chr2<-subset(all, all$V1 == "hcontortus_chr2_Celeg_TT_arrow_pilon")
summary(chr2)

                                   V1      
 hcontortus_chr_mtDNA_arrow_pilon    :   0  
 hcontortus_chr1_Celeg_TT_arrow_pilon:   0  
 hcontortus_chr2_Celeg_TT_arrow_pilon:4739  
 hcontortus_chr3_Celeg_TT_arrow_pilon:   0  
 hcontortus_chr4_Celeg_TT_arrow_pilon:   0  
 hcontortus_chr5_Celeg_TT_arrow_pilon:   0  
 hcontortus_chrX_Celeg_TT_arrow_pilon:   0  
       V2                 V3                 V4        
 Min.   :       0   Min.   :   10000   Min.   :     0  
 1st Qu.:11845000   1st Qu.:11855000   1st Qu.:  6499  
 Median :23690000   Median :23700000   Median :  7420  
 Mean   :23690000   Mean   :23699998   Mean   :  8002  
 3rd Qu.:35535000   3rd Qu.:35545000   3rd Qu.:  8212  
 Max.   :47380000   Max.   :47382676   Max.   :705518  
                                                       
       V5              mid          
 Min.   :     0   Min.   :    5000  
 1st Qu.:  7014   1st Qu.:11850000  
 Median :  7852   Median :23695000  
 Mean   :  8361   Mean   :23695000  
 3rd Qu.:  8445   3rd Qu.:35540000  
 Max.   :670923   Max.   :47385000 

chr2mapq20<-subset(mapq20, mapq20$V1=="hcontortus_chr2_Celeg_TT_arrow_pilon")
summary(chr2mapq20)

                                  V1      
 hcontortus_chr_mtDNA_arrow_pilon    :   0  
 hcontortus_chr1_Celeg_TT_arrow_pilon:   0  
 hcontortus_chr2_Celeg_TT_arrow_pilon:4739  
 hcontortus_chr3_Celeg_TT_arrow_pilon:   0  
 hcontortus_chr4_Celeg_TT_arrow_pilon:   0  
 hcontortus_chr5_Celeg_TT_arrow_pilon:   0  
 hcontortus_chrX_Celeg_TT_arrow_pilon:   0  
       V2                 V3                 V4        
 Min.   :       0   Min.   :   10000   Min.   :     0  
 1st Qu.:11845000   1st Qu.:11855000   1st Qu.:  5835  
 Median :23690000   Median :23700000   Median :  6863  
 Mean   :23690000   Mean   :23699998   Mean   :  6630  
 3rd Qu.:35535000   3rd Qu.:35545000   3rd Qu.:  7676  
 Max.   :47380000   Max.   :47382676   Max.   :103844  
                                                       
       V5              mid          
 Min.   :     0   Min.   :    5000  
 1st Qu.:  6459   1st Qu.:11850000  
 Median :  7396   Median :23695000  
 Mean   :  7101   Mean   :23695000  
 3rd Qu.:  8057   3rd Qu.:35540000  
 Max.   :104922   Max.   :47385000  
                                    


  # For UGA:

x<-ggplot(chr2)+
geom_point(aes(x=chr2$mid, y=chr2$V4))+
coord_cartesian(ylim=c(0,15000))
x

x<-ggplot(chr2mapq20)+
geom_point(aes(x=chr2mapq20$mid, y=chr2mapq20$V4))+
coord_cartesian(ylim=c(0,15000))
x


# For ISE:


x<-ggplot(chr2)+
geom_point(aes(x=chr2$mid, y=chr2$V5))+
coord_cartesian(ylim=c(0,15000))
x

x<-ggplot(chr2mapq20)+
geom_point(aes(x=chr2mapq20$mid, y=chr2mapq20$V5))+
coord_cartesian(ylim=c(0,15000))
x

# For both:
x<-ggplot(chr2)+
geom_smooth(aes(x=chr2$mid, y=chr2$V4), colour="green")+
geom_smooth(aes(x=chr2mapq20$mid, y=chr2mapq20$V4), colour="blue")+
geom_smooth(aes(x=chr2$mid, y=chr2$V5), colour="pink")+
geom_smooth(aes(x=chr2mapq20$mid, y=chr2mapq20$V5), colour="purple")+
coord_cartesian(ylim=c(0,15000))
x

 

### ChrIII

chr3<-subset(all, all$V1 == "hcontortus_chr3_Celeg_TT_arrow_pilon")
summary(chr3)

                                   V1      
 hcontortus_chr_mtDNA_arrow_pilon    :   0  
 hcontortus_chr1_Celeg_TT_arrow_pilon:   0  
 hcontortus_chr2_Celeg_TT_arrow_pilon:   0  
 hcontortus_chr3_Celeg_TT_arrow_pilon:4357  
 hcontortus_chr4_Celeg_TT_arrow_pilon:   0  
 hcontortus_chr5_Celeg_TT_arrow_pilon:   0  
 hcontortus_chrX_Celeg_TT_arrow_pilon:   0  
       V2                 V3                 V4        
 Min.   :       0   Min.   :   10000   Min.   :     0  
 1st Qu.:10890000   1st Qu.:10900000   1st Qu.:  5990  
 Median :21780000   Median :21790000   Median :  7048  
 Mean   :21780000   Mean   :21789998   Mean   :  7737  
 3rd Qu.:32670000   3rd Qu.:32680000   3rd Qu.:  7980  
 Max.   :43560000   Max.   :43560352   Max.   :542638  
                                                       
       V5              mid          
 Min.   :     0   Min.   :    5000  
 1st Qu.:  6334   1st Qu.:10895000  
 Median :  7299   Median :21785000  
 Mean   :  7940   Mean   :21785000  
 3rd Qu.:  8099   3rd Qu.:32675000  
 Max.   :581989   Max.   :43565000  

chr3mapq20<-subset(mapq20, mapq20$V1=="hcontortus_chr3_Celeg_TT_arrow_pilon")
summary(chr3mapq20)

                                    V1      
 hcontortus_chr_mtDNA_arrow_pilon    :   0  
 hcontortus_chr1_Celeg_TT_arrow_pilon:   0  
 hcontortus_chr2_Celeg_TT_arrow_pilon:   0  
 hcontortus_chr3_Celeg_TT_arrow_pilon:4357  
 hcontortus_chr4_Celeg_TT_arrow_pilon:   0  
 hcontortus_chr5_Celeg_TT_arrow_pilon:   0  
 hcontortus_chrX_Celeg_TT_arrow_pilon:   0  
       V2                 V3                 V4       
 Min.   :       0   Min.   :   10000   Min.   :    0  
 1st Qu.:10890000   1st Qu.:10900000   1st Qu.: 5294  
 Median :21780000   Median :21790000   Median : 6410  
 Mean   :21780000   Mean   :21789998   Mean   : 6299  
 3rd Qu.:32670000   3rd Qu.:32680000   3rd Qu.: 7394  
 Max.   :43560000   Max.   :43560352   Max.   :74194  
                                                      
       V5             mid          
 Min.   :    0   Min.   :    5000  
 1st Qu.: 5732   1st Qu.:10895000  
 Median : 6815   Median :21785000  
 Mean   : 6602   Mean   :21785000  
 3rd Qu.: 7657   3rd Qu.:32675000  
 Max.   :71698   Max.   :43565000  

  # For UGA:

x<-ggplot(chr3)+
geom_point(aes(x=chr3$mid, y=chr3$V4))+
coord_cartesian(ylim=c(0,15000))
x

x<-ggplot(chr3mapq20)+
geom_point(aes(x=chr3mapq20$mid, y=chr3mapq20$V4))+
coord_cartesian(ylim=c(0,15000))
x


# For ISE:


x<-ggplot(chr3)+
geom_point(aes(x=chr3$mid, y=chr3$V5))+
coord_cartesian(ylim=c(0,15000))
x

x<-ggplot(chr3mapq20)+
geom_point(aes(x=chr3mapq20$mid, y=chr3mapq20$V5))+
coord_cartesian(ylim=c(0,15000))
x

# For both:
x<-ggplot(chr3)+
geom_smooth(aes(x=chr3$mid, y=chr3$V4), colour="green")+
geom_smooth(aes(x=chr3mapq20$mid, y=chr3mapq20$V4), colour="blue")+
geom_smooth(aes(x=chr3$mid, y=chr3$V5), colour="pink")+
geom_smooth(aes(x=chr3mapq20$mid, y=chr3mapq20$V5), colour="purple")+
coord_cartesian(ylim=c(0,15000))
x


## Chr4
chr4<-subset(all, all$V1 == "hcontortus_chr4_Celeg_TT_arrow_pilon")
summary(chr4)

                                    V1      
 hcontortus_chr_mtDNA_arrow_pilon    :   0  
 hcontortus_chr1_Celeg_TT_arrow_pilon:   0  
 hcontortus_chr2_Celeg_TT_arrow_pilon:   0  
 hcontortus_chr3_Celeg_TT_arrow_pilon:   0  
 hcontortus_chr4_Celeg_TT_arrow_pilon:5183  
 hcontortus_chr5_Celeg_TT_arrow_pilon:   0  
 hcontortus_chrX_Celeg_TT_arrow_pilon:   0  
       V2                 V3                 V4        
 Min.   :       0   Min.   :   10000   Min.   :     0  
 1st Qu.:12955000   1st Qu.:12965000   1st Qu.:  5960  
 Median :25910000   Median :25920000   Median :  7052  
 Mean   :25910000   Mean   :25919999   Mean   :  7472  
 3rd Qu.:38865000   3rd Qu.:38875000   3rd Qu.:  8026  
 Max.   :51820000   Max.   :51826579   Max.   :207013  
                                                       
       V5              mid          
 Min.   :     0   Min.   :    5000  
 1st Qu.:  6546   1st Qu.:12960000  
 Median :  7518   Median :25915000  
 Mean   :  7861   Mean   :25915000  
 3rd Qu.:  8354   3rd Qu.:38870000  
 Max.   :354454   Max.   :51825000 

chr4mapq20<-subset(mapq20, mapq20$V1=="hcontortus_chr4_Celeg_TT_arrow_pilon")
summary(chr4mapq20)

                                    V1      
 hcontortus_chr_mtDNA_arrow_pilon    :   0  
 hcontortus_chr1_Celeg_TT_arrow_pilon:   0  
 hcontortus_chr2_Celeg_TT_arrow_pilon:   0  
 hcontortus_chr3_Celeg_TT_arrow_pilon:   0  
 hcontortus_chr4_Celeg_TT_arrow_pilon:5183  
 hcontortus_chr5_Celeg_TT_arrow_pilon:   0  
 hcontortus_chrX_Celeg_TT_arrow_pilon:   0  
       V2                 V3                 V4       
 Min.   :       0   Min.   :   10000   Min.   :    0  
 1st Qu.:12955000   1st Qu.:12965000   1st Qu.: 5331  
 Median :25910000   Median :25920000   Median : 6454  
 Mean   :25910000   Mean   :25919999   Mean   : 6363  
 3rd Qu.:38865000   3rd Qu.:38875000   3rd Qu.: 7420  
 Max.   :51820000   Max.   :51826579   Max.   :87869  
                                                      
       V5             mid          
 Min.   :    0   Min.   :    5000  
 1st Qu.: 5998   1st Qu.:12960000  
 Median : 7030   Median :25915000  
 Mean   : 6876   Mean   :25915000  
 3rd Qu.: 7916   3rd Qu.:38870000  
 Max.   :87894   Max.   :51825000 

  # For UGA:

x<-ggplot(chr4)+
labs(y="Read count per 10kb window", x="Basepair") +
geom_point(aes(x=chr4$mid, y=chr4$V4))+
coord_cartesian(ylim=c(0,15000))
x

x<-ggplot(chr4mapq20)+
labs(y="Read count per 10kb window", x="Basepair") +
geom_point(aes(x=chr4mapq20$mid, y=chr4mapq20$V4))+
coord_cartesian(ylim=c(0,15000))
x


# For ISE:


x<-ggplot(chr4)+
labs(y="Read count per 10kb window", x="Basepair") +
geom_point(aes(x=chr4$mid, y=chr4$V5))+
coord_cartesian(ylim=c(0,15000))
x

x<-ggplot(chr4mapq20)+
labs(y="Read count per 10kb window", x="Basepair") +
geom_point(aes(x=chr4mapq20$mid, y=chr4mapq20$V5))+
coord_cartesian(ylim=c(0,15000))
x

# For both:
x<-ggplot(chr4)+
labs(y="Read count per 10kb window", x="Basepair") +
geom_smooth(aes(x=chr4$mid, y=chr4$V4), colour="green")+
geom_smooth(aes(x=chr4mapq20$mid, y=chr4mapq20$V4), colour="blue")+
geom_smooth(aes(x=chr4$mid, y=chr4$V5), colour="pink")+
geom_smooth(aes(x=chr4mapq20$mid, y=chr4mapq20$V5), colour="purple")+
coord_cartesian(ylim=c(0,15000))
x

boxplot(all$V4 ~ all$V1, data = all, ylim =c(0,15000))
boxplot(V4 ~ V1, data = mapq20, ylim =c(0,15000))
# Note are mtDNA, 1-5, X.

boxplot(all$V5 ~ all$V1, data = all, ylim =c(0,15000))
boxplot(V5 ~ V1, data = mapq20, ylim =c(0,15000))
abline(h=5000, col="blue")
abline(h=6000, col="blue")
abline(h=7000, col="blue")
abline(h=8000, col="blue")
abline(h=9000, col="blue")



